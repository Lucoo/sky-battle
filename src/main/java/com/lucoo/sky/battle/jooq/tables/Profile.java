/*
 * This file is generated by jOOQ.
*/
package com.lucoo.sky.battle.jooq.tables;


import com.lucoo.sky.battle.jooq.ConfigRepository;
import com.lucoo.sky.battle.jooq.Keys;
import com.lucoo.sky.battle.jooq.tables.records.ProfileRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Profile extends TableImpl<ProfileRecord> {

    private static final long serialVersionUID = -790258321;

    /**
     * The reference instance of <code>config-repository.profile</code>
     */
    public static final Profile PROFILE = new Profile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfileRecord> getRecordType() {
        return ProfileRecord.class;
    }

    /**
     * The column <code>config-repository.profile.ID</code>. 编号
     */
    public final TableField<ProfileRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "编号");

    /**
     * The column <code>config-repository.profile.profile</code>. 环境
     */
    public final TableField<ProfileRecord, String> PROFILE_ = createField("profile", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "环境");

    /**
     * The column <code>config-repository.profile.application_id</code>. 应用外键
     */
    public final TableField<ProfileRecord, Integer> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "应用外键");

    /**
     * Create a <code>config-repository.profile</code> table reference
     */
    public Profile() {
        this("profile", null);
    }

    /**
     * Create an aliased <code>config-repository.profile</code> table reference
     */
    public Profile(String alias) {
        this(alias, PROFILE);
    }

    private Profile(String alias, Table<ProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private Profile(String alias, Table<ProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ConfigRepository.CONFIG_REPOSITORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProfileRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROFILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProfileRecord> getPrimaryKey() {
        return Keys.KEY_PROFILE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<ProfileRecord>>asList(Keys.KEY_PROFILE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Profile as(String alias) {
        return new Profile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Profile rename(String name) {
        return new Profile(name, null);
    }
}
