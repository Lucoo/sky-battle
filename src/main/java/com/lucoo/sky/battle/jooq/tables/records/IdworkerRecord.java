/*
 * This file is generated by jOOQ.
*/
package com.lucoo.sky.battle.jooq.tables.records;


import com.lucoo.sky.battle.jooq.tables.Idworker;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdworkerRecord extends UpdatableRecordImpl<IdworkerRecord> implements Record7<Integer, String, String, String, Integer, Integer, Byte> {

    private static final long serialVersionUID = -650651577;

    /**
     * Setter for <code>config-repository.idworker.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>config-repository.idworker.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>config-repository.idworker.application_name</code>.
     */
    public void setApplicationName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>config-repository.idworker.application_name</code>.
     */
    public String getApplicationName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>config-repository.idworker.ip</code>.
     */
    public void setIp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>config-repository.idworker.ip</code>.
     */
    public String getIp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>config-repository.idworker.port</code>.
     */
    public void setPort(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>config-repository.idworker.port</code>.
     */
    public String getPort() {
        return (String) get(3);
    }

    /**
     * Setter for <code>config-repository.idworker.datacenter_id</code>.
     */
    public void setDatacenterId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>config-repository.idworker.datacenter_id</code>.
     */
    public Integer getDatacenterId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>config-repository.idworker.worker_id</code>.
     */
    public void setWorkerId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>config-repository.idworker.worker_id</code>.
     */
    public Integer getWorkerId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>config-repository.idworker.status</code>. 0:未使用  1:正常使用
     */
    public void setStatus(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>config-repository.idworker.status</code>. 0:未使用  1:正常使用
     */
    public Byte getStatus() {
        return (Byte) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Integer, Integer, Byte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Integer, Integer, Byte> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Idworker.IDWORKER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Idworker.IDWORKER.APPLICATION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Idworker.IDWORKER.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Idworker.IDWORKER.PORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Idworker.IDWORKER.DATACENTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Idworker.IDWORKER.WORKER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return Idworker.IDWORKER.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getApplicationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getDatacenterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getWorkerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord value2(String value) {
        setApplicationName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord value3(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord value4(String value) {
        setPort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord value5(Integer value) {
        setDatacenterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord value6(Integer value) {
        setWorkerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord value7(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdworkerRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Integer value6, Byte value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IdworkerRecord
     */
    public IdworkerRecord() {
        super(Idworker.IDWORKER);
    }

    /**
     * Create a detached, initialised IdworkerRecord
     */
    public IdworkerRecord(Integer id, String applicationName, String ip, String port, Integer datacenterId, Integer workerId, Byte status) {
        super(Idworker.IDWORKER);

        set(0, id);
        set(1, applicationName);
        set(2, ip);
        set(3, port);
        set(4, datacenterId);
        set(5, workerId);
        set(6, status);
    }
}
