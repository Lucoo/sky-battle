/*
 * This file is generated by jOOQ.
*/
package com.lucoo.sky.battle.jooq;


import com.lucoo.sky.battle.jooq.tables.Application;
import com.lucoo.sky.battle.jooq.tables.Idworker;
import com.lucoo.sky.battle.jooq.tables.Profile;
import com.lucoo.sky.battle.jooq.tables.Properties;
import com.lucoo.sky.battle.jooq.tables.records.ApplicationRecord;
import com.lucoo.sky.battle.jooq.tables.records.IdworkerRecord;
import com.lucoo.sky.battle.jooq.tables.records.ProfileRecord;
import com.lucoo.sky.battle.jooq.tables.records.PropertiesRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>config-repository</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ApplicationRecord, Integer> IDENTITY_APPLICATION = Identities0.IDENTITY_APPLICATION;
    public static final Identity<IdworkerRecord, Integer> IDENTITY_IDWORKER = Identities0.IDENTITY_IDWORKER;
    public static final Identity<ProfileRecord, Integer> IDENTITY_PROFILE = Identities0.IDENTITY_PROFILE;
    public static final Identity<PropertiesRecord, Long> IDENTITY_PROPERTIES = Identities0.IDENTITY_PROPERTIES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ApplicationRecord> KEY_APPLICATION_PRIMARY = UniqueKeys0.KEY_APPLICATION_PRIMARY;
    public static final UniqueKey<IdworkerRecord> KEY_IDWORKER_PRIMARY = UniqueKeys0.KEY_IDWORKER_PRIMARY;
    public static final UniqueKey<IdworkerRecord> KEY_IDWORKER_IDWORKER_UNIQUE = UniqueKeys0.KEY_IDWORKER_IDWORKER_UNIQUE;
    public static final UniqueKey<ProfileRecord> KEY_PROFILE_PRIMARY = UniqueKeys0.KEY_PROFILE_PRIMARY;
    public static final UniqueKey<PropertiesRecord> KEY_PROPERTIES_PRIMARY = UniqueKeys0.KEY_PROPERTIES_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<ApplicationRecord, Integer> IDENTITY_APPLICATION = createIdentity(Application.APPLICATION, Application.APPLICATION.ID);
        public static Identity<IdworkerRecord, Integer> IDENTITY_IDWORKER = createIdentity(Idworker.IDWORKER, Idworker.IDWORKER.ID);
        public static Identity<ProfileRecord, Integer> IDENTITY_PROFILE = createIdentity(Profile.PROFILE, Profile.PROFILE.ID);
        public static Identity<PropertiesRecord, Long> IDENTITY_PROPERTIES = createIdentity(Properties.PROPERTIES, Properties.PROPERTIES.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<ApplicationRecord> KEY_APPLICATION_PRIMARY = createUniqueKey(Application.APPLICATION, "KEY_application_PRIMARY", Application.APPLICATION.ID);
        public static final UniqueKey<IdworkerRecord> KEY_IDWORKER_PRIMARY = createUniqueKey(Idworker.IDWORKER, "KEY_idworker_PRIMARY", Idworker.IDWORKER.ID);
        public static final UniqueKey<IdworkerRecord> KEY_IDWORKER_IDWORKER_UNIQUE = createUniqueKey(Idworker.IDWORKER, "KEY_idworker_idworker_unique", Idworker.IDWORKER.IP, Idworker.IDWORKER.PORT);
        public static final UniqueKey<ProfileRecord> KEY_PROFILE_PRIMARY = createUniqueKey(Profile.PROFILE, "KEY_profile_PRIMARY", Profile.PROFILE.ID);
        public static final UniqueKey<PropertiesRecord> KEY_PROPERTIES_PRIMARY = createUniqueKey(Properties.PROPERTIES, "KEY_properties_PRIMARY", Properties.PROPERTIES.ID);
    }
}
