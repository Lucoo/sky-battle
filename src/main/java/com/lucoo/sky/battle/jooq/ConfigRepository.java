/*
 * This file is generated by jOOQ.
*/
package com.lucoo.sky.battle.jooq;


import com.lucoo.sky.battle.jooq.tables.Application;
import com.lucoo.sky.battle.jooq.tables.Idworker;
import com.lucoo.sky.battle.jooq.tables.Profile;
import com.lucoo.sky.battle.jooq.tables.Properties;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigRepository extends SchemaImpl {

    private static final long serialVersionUID = 352038762;

    /**
     * The reference instance of <code>config-repository</code>
     */
    public static final ConfigRepository CONFIG_REPOSITORY = new ConfigRepository();

    /**
     * The table <code>config-repository.application</code>.
     */
    public final Application APPLICATION = com.lucoo.sky.battle.jooq.tables.Application.APPLICATION;

    /**
     * The table <code>config-repository.idworker</code>.
     */
    public final Idworker IDWORKER = com.lucoo.sky.battle.jooq.tables.Idworker.IDWORKER;

    /**
     * The table <code>config-repository.profile</code>.
     */
    public final Profile PROFILE = com.lucoo.sky.battle.jooq.tables.Profile.PROFILE;

    /**
     * The table <code>config-repository.properties</code>.
     */
    public final Properties PROPERTIES = com.lucoo.sky.battle.jooq.tables.Properties.PROPERTIES;

    /**
     * No further instances allowed
     */
    private ConfigRepository() {
        super("config-repository", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Application.APPLICATION,
            Idworker.IDWORKER,
            Profile.PROFILE,
            Properties.PROPERTIES);
    }
}
